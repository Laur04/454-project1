(set-logic QF_UFIDL)
(declare-fun m () Int)
(declare-fun n () Int)
(declare-fun p () Int)
(declare-fun tmp_0 () Int)
(declare-fun tmp_1 () Int)
(declare-fun tmp_2 () Int)
(declare-fun tmp_3 () Int)
(declare-fun tmp__0 () Int)
(declare-fun tmp__1 () Int)
(declare-fun tmp__2 () Int)
(declare-fun tmp__3 () Int)
(declare-fun tmp__4 () Int)
(declare-fun tmp__5 () Int)
(declare-fun tmp__6 () Int)
(declare-fun x () Int)
(assert (=> (>= n 0) (=> (= tmp_0 p) (=> (= tmp__6 0) (=> (= tmp_1 x) (=> (= tmp__5 0) (and (<= tmp__5 n) (and (= tmp__6 (* tmp__5 m)) (=> (<= tmp__2 n) (=> (= tmp__3 (* tmp__2 tmp__4)) (and (=> (< tmp__2 n) (=> (= tmp_2 tmp__2) (=> (= tmp__1 (+ tmp_2 1)) (=> (= tmp_3 tmp__3) (=> (= tmp__0 (+ tmp_3 tmp__4)) (=> (= 0 0) (and (<= tmp__1 n) (and (= tmp__0 (* tmp__1 tmp__4)) (=> (= 0 1) (=> (= 0 0) (and (= tmp__0 (* n tmp__4)) (= 0 0)))))))))))) (=> (not (< tmp__2 n)) (=> (= 0 0) (and (= tmp__3 (* n tmp__4)) (= 0 0)))))))))))))))
(check-sat)

Verified
