Implies (ADisj (ACmp (Neq (Var "A") (Num 0))) (ACmp (Neq (Var "B") (Num 0)))) (Implies (AConj (ACmp (Le (Num 0) (Var "A"))) (ACmp (Le (Num 0) (Var "B")))) (Implies (ACmp (Eq (Var "tmp_0") (Var "gcd"))) (Implies (ACmp (Eq (Var "tmp__7") (Num 1))) (Implies (ACmp (Eq (Var "tmp_1") (Var "j"))) (Implies (ACmp (Eq (Var "tmp__6") (Num 1))) (AConj (AConj (ACmp (Eq (Mod (Var "A") (Var "tmp__7")) (Num 0))) (ACmp (Eq (Mod (Var "B") (Var "tmp__7")) (Num 0)))) (Implies (AConj (ACmp (Eq (Mod (Var "tmp__5") (Var "tmp__3")) (Num 0))) (ACmp (Eq (Mod (Var "tmp__4") (Var "tmp__3")) (Num 0)))) (AConj (Implies (ADisj (ACmp (Le (Var "tmp__2") (Var "tmp__5"))) (ACmp (Le (Var "tmp__2") (Var "tmp__4")))) (AConj (Implies (AConj (ACmp (Eq (Mod (Var "tmp__5") (Var "tmp__2")) (Num 0))) (ACmp (Eq (Mod (Var "tmp__4") (Var "tmp__2")) (Num 0)))) (Implies (ACmp (Eq (Var "tmp_2") (Var "tmp__3"))) (Implies (ACmp (Eq (Var "tmp__1") (Var "tmp__2"))) (Implies (ACmp (Eq (Num 0) (Num 0))) (Implies (ACmp (Eq (Num 0) (Num 0))) (AConj (AConj (ACmp (Eq (Mod (Var "tmp__5") (Var "tmp__1")) (Num 0))) (ACmp (Eq (Mod (Var "tmp__4") (Var "tmp__1")) (Num 0)))) (Implies (ACmp (Eq (Num 0) (Num 1))) (Implies (ACmp (Eq (Var "tmp_3") (Var "lcm"))) (Implies (ACmp (Eq (Var "tmp__0") (Div (Parens (Mul (Var "tmp__5") (Var "tmp__4"))) (Var "tmp__1")))) (Implies (ACmp (Eq (Num 0) (Num 0))) (AConj (AConj (AConj (ACmp (Le (Var "tmp__5") (Var "tmp__0"))) (ACmp (Le (Var "tmp__0") (Mul (Var "tmp__5") (Var "tmp__4"))))) (ACmp (Le (Var "tmp__4") (Var "tmp__0")))) (ACmp (Eq (Num 0) (Num 0)))))))))))))) (Implies (ANot (AConj (ACmp (Eq (Mod (Var "tmp__5") (Var "tmp__2")) (Num 0))) (ACmp (Eq (Mod (Var "tmp__4") (Var "tmp__2")) (Num 0))))) (Implies (ACmp (Eq (Num 0) (Num 0))) (Implies (ACmp (Eq (Num 0) (Num 0))) (AConj (AConj (ACmp (Eq (Mod (Var "tmp__5") (Var "tmp__3")) (Num 0))) (ACmp (Eq (Mod (Var "tmp__4") (Var "tmp__3")) (Num 0)))) (Implies (ACmp (Eq (Num 0) (Num 1))) (Implies (ACmp (Eq (Var "tmp_3") (Var "lcm"))) (Implies (ACmp (Eq (Var "tmp__0") (Div (Parens (Mul (Var "tmp__5") (Var "tmp__4"))) (Var "tmp__3")))) (Implies (ACmp (Eq (Num 0) (Num 0))) (AConj (AConj (AConj (ACmp (Le (Var "tmp__5") (Var "tmp__0"))) (ACmp (Le (Var "tmp__0") (Mul (Var "tmp__5") (Var "tmp__4"))))) (ACmp (Le (Var "tmp__4") (Var "tmp__0")))) (ACmp (Eq (Num 0) (Num 0)))))))))))))) (Implies (ANot (ADisj (ACmp (Le (Var "tmp__2") (Var "tmp__5"))) (ACmp (Le (Var "tmp__2") (Var "tmp__4"))))) (Implies (ACmp (Eq (Var "tmp_3") (Var "lcm"))) (Implies (ACmp (Eq (Var "tmp__0") (Div (Parens (Mul (Var "tmp__5") (Var "tmp__4"))) (Var "tmp__3")))) (Implies (ACmp (Eq (Num 0) (Num 0))) (AConj (AConj (AConj (ACmp (Le (Var "tmp__5") (Var "tmp__0"))) (ACmp (Le (Var "tmp__0") (Mul (Var "tmp__5") (Var "tmp__4"))))) (ACmp (Le (Var "tmp__4") (Var "tmp__0")))) (ACmp (Eq (Num 0) (Num 0))))))))))))))))

(set-logic QF_AUFNIA)
(declare-fun A () Int)
(declare-fun B () Int)
(declare-fun gcd () Int)
(declare-fun j () Int)
(declare-fun lcm () Int)
(declare-fun tmp_0 () Int)
(declare-fun tmp_1 () Int)
(declare-fun tmp_2 () Int)
(declare-fun tmp_3 () Int)
(declare-fun tmp__0 () Int)
(declare-fun tmp__1 () Int)
(declare-fun tmp__2 () Int)
(declare-fun tmp__3 () Int)
(declare-fun tmp__4 () Int)
(declare-fun tmp__5 () Int)
(declare-fun tmp__6 () Int)
(declare-fun tmp__7 () Int)
(assert (not (=> (or (not (= A 0)) (not (= B 0))) (=> (and (<= 0 A) (<= 0 B)) (=> (= tmp_0 gcd) (=> (= tmp__7 1) (=> (= tmp_1 j) (=> (= tmp__6 1) (and (and (= (mod A tmp__7) 0) (= (mod B tmp__7) 0)) (=> (and (= (mod tmp__5 tmp__3) 0) (= (mod tmp__4 tmp__3) 0)) (and (=> (or (<= tmp__2 tmp__5) (<= tmp__2 tmp__4)) (and (=> (and (= (mod tmp__5 tmp__2) 0) (= (mod tmp__4 tmp__2) 0)) (=> (= tmp_2 tmp__3) (=> (= tmp__1 tmp__2) (=> (= 0 0) (=> (= 0 0) (and (and (= (mod tmp__5 tmp__1) 0) (= (mod tmp__4 tmp__1) 0)) (=> (= 0 1) (=> (= tmp_3 lcm) (=> (= tmp__0 (div (* tmp__5 tmp__4) tmp__1)) (=> (= 0 0) (and (and (and (<= tmp__5 tmp__0) (<= tmp__0 (* tmp__5 tmp__4))) (<= tmp__4 tmp__0)) (= 0 0)))))))))))) (=> (not (and (= (mod tmp__5 tmp__2) 0) (= (mod tmp__4 tmp__2) 0))) (=> (= 0 0) (=> (= 0 0) (and (and (= (mod tmp__5 tmp__3) 0) (= (mod tmp__4 tmp__3) 0)) (=> (= 0 1) (=> (= tmp_3 lcm) (=> (= tmp__0 (div (* tmp__5 tmp__4) tmp__3)) (=> (= 0 0) (and (and (and (<= tmp__5 tmp__0) (<= tmp__0 (* tmp__5 tmp__4))) (<= tmp__4 tmp__0)) (= 0 0)))))))))))) (=> (not (or (<= tmp__2 tmp__5) (<= tmp__2 tmp__4))) (=> (= tmp_3 lcm) (=> (= tmp__0 (div (* tmp__5 tmp__4) tmp__3)) (=> (= 0 0) (and (and (and (<= tmp__5 tmp__0) (<= tmp__0 (* tmp__5 tmp__4))) (<= tmp__4 tmp__0)) (= 0 0)))))))))))))))))
(check-sat)
sat

Not verified
