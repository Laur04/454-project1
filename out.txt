(set-logic QF_AUFNIA)
(declare-fun AAtmp_0 () Int)
(declare-fun AAtmp_1 () Int)
(declare-fun AAtmp_2 () Int)
(declare-fun AAtmp_3 () Int)
(declare-fun VCtmp__0 () Int)
(declare-fun VCtmp__1 () Int)
(declare-fun VCtmp__2 () Int)
(declare-fun VCtmp__3 () Int)
(declare-fun VCtmp__4 () Int)
(declare-fun VCtmp__5 () Int)
(declare-fun VCtmp__6 () Int)
(declare-fun i () Int)
(declare-fun j () Int)
(declare-fun n () Int)
(declare-fun p () Int)
(assert (not (=> (<= 2 n) (=> (= AAtmp_0 i) (=> (= VCtmp__6 3) (=> (= AAtmp_1 p) (=> (= VCtmp__5 1) (and (=> (= VCtmp__5 1) (forall ((j Int) )(=> (and (<= 2 j) (< j VCtmp__6)) (not (= (mod n j) 0))))) (and (<= VCtmp__6 n) (=> (=> (= VCtmp__2 1) (forall ((j Int) )(=> (and (<= 2 j) (< j VCtmp__4)) (not (= (mod VCtmp__3 j) 0))))) (=> (<= VCtmp__4 VCtmp__3) (and (=> (< VCtmp__4 VCtmp__3) (and (=> (= (mod VCtmp__3 VCtmp__4) 0) (=> (= AAtmp_2 VCtmp__2) (=> (= VCtmp__1 0) (=> (= 0 0) (=> (= AAtmp_3 VCtmp__4) (=> (= VCtmp__0 (+ AAtmp_3 1)) (=> (= 0 0) (and (=> (= VCtmp__1 1) (forall ((j Int) )(=> (and (<= 2 j) (< j VCtmp__0)) (not (= (mod VCtmp__3 j) 0))))) (and (<= VCtmp__0 VCtmp__3) (=> (= 0 1) (=> (= 0 0) (and (=> (= VCtmp__1 1) (forall ((VCtmp__0 Int) )(=> (and (<= 2 VCtmp__0) (< VCtmp__0 VCtmp__3)) (not (= (mod VCtmp__3 VCtmp__0) 0))))) (= 0 0))))))))))))) (=> (not (= (mod VCtmp__3 VCtmp__4) 0)) (=> (= 0 0) (=> (= AAtmp_3 VCtmp__4) (=> (= VCtmp__0 (+ AAtmp_3 1)) (=> (= 0 0) (and (=> (= VCtmp__2 1) (forall ((j Int) )(=> (and (<= 2 j) (< j VCtmp__0)) (not (= (mod VCtmp__3 j) 0))))) (and (<= VCtmp__0 VCtmp__3) (=> (= 0 1) (=> (= 0 0) (and (=> (= VCtmp__2 1) (forall ((VCtmp__0 Int) )(=> (and (<= 2 VCtmp__0) (< VCtmp__0 VCtmp__3)) (not (= (mod VCtmp__3 VCtmp__0) 0))))) (= 0 0))))))))))))) (=> (not (< VCtmp__4 VCtmp__3)) (=> (= 0 0) (and (=> (= VCtmp__2 1) (forall ((VCtmp__4 Int) )(=> (and (<= 2 VCtmp__4) (< VCtmp__4 VCtmp__3)) (not (= (mod VCtmp__3 VCtmp__4) 0))))) (= 0 0))))))))))))))))
(check-sat)
